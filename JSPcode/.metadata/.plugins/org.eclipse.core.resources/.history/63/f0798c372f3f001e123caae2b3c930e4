package com.jsp.kgmember;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class MemberDAO {
	
	// DAO : Data Access Object
	// 데이터베이스의 데이터에 접근하여 CRUD를 처리하는 객체
	
	private DataSource ds;
	// Connection Pool을 관리하는 객체
	// 이 객체는 JNDI (Java Naming & Directory Interface) API를 통해 사용
	// "이름"을 가지고 데이터베이스 정보를 얻을 수 있는 API
	
	private Connection conn;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	private String driver = "oracle.jdbc.OracleDriver";
	private String url = "jdbc:oracle:thin:@localhost:1521:xe";
	private String uid = "C##JSPUSER";
	private String upw = "jsp123";
	
	private MemberDAO() {
		
		try {
			
			Context context = new InitialContext();
			// JNDI 서비스를 제공하는 객체
			
			ds = (DataSource)context.lookup("java:comp/env/jdbc/oracle");
			
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		
		
	}
	
	private static MemberDAO instance = new MemberDAO();
	
	public static MemberDAO getInstance() {
		return instance;
	}
	
	
	// kgmember 회원의 전체 데이터를 얻어와 모든 데이터를 반환해주는 메소드
	public List<MemberDTO> memberList(){
		
		List<MemberDTO> list = new ArrayList<>();
		
		String query = "SELECT * FROM KGMEMBER";
		
		try {
			
			Class.forName(driver);
			conn = DriverManager.getConnection(url, uid, upw);
			pstmt = conn.prepareStatement(query);
			
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				
				String id = rs.getString("ID");
				String pw = rs.getString("PW");
				String name = rs.getString("NAME");
				String email = rs.getString("EMAIL");
				Timestamp regDate = rs.getTimestamp("REGDATE");
				String address = rs.getString("ADDRESS");
				
				list.add(new MemberDTO(id, pw, name, email, regDate, address));
				
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(rs != null)rs.close();
				if(pstmt != null)pstmt.close();
				if(conn != null)conn.close();
			}catch(Exception e2) {}
			
		}
		
		return list;
		
	}
	
	
}






